<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.artiope</groupId>
  <artifactId>SpringBootMaven</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>springbootTest</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <druid.version>1.0.18</druid.version>
  </properties>

 
  
      <!-- Inherit defaults from Spring Boot -->
    <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.3.3.RELEASE</version>
    <relativePath/>
   </parent>
 
    <!-- Add typical dependencies for a web application -->
    <dependencies>
	    <!--  dependency>
	      <groupId>junit</groupId>
	      <artifactId>junit</artifactId>
	      <version>3.8.1</version>
	      <scope>test</scope>
	    </dependency-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
		    <exclusions>
		      <exclusion>
		        <groupId>org.springframework.boot</groupId>
		        <artifactId>spring-boot-starter-tomcat</artifactId>
		      </exclusion>
		    </exclusions>
        </dependency>
	     <dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-undertow</artifactId>
	  </dependency>
	        <dependency>
       <groupId>mysql</groupId>
       <artifactId>mysql-connector-java</artifactId>
       </dependency>
       <dependency>
           <groupId>org.springframework.boot</groupId>
           <artifactId>spring-boot-starter-data-jpa</artifactId>
       </dependency>
      
	    <dependency>
		    <groupId>com.alibaba</groupId>
		    <artifactId>druid</artifactId>
		    <version>${druid.version}</version>
	    </dependency>
	    <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-thymeleaf</artifactId>
      </dependency>
      <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
      </dependency>
     <!-- 添加springboot提供的测试以=依赖 -->
     <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
     </dependency>
       <!-- 添加spring  AOP依赖 -->
     <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-aop</artifactId>
    </dependency>
     <dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
     <!-- 发送邮件. -->
	<dependency> 
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-mail</artifactId>
	</dependency>          
       <!--
           devtools可以实现页面热部署（即页面修改后会立即生效，这个可以直接在application.properties文件中配置spring.thymeleaf.cache=false来实现），    
           实现类文件热部署（类文件修改后不会立即生效），实现对属性文件的热部署。 
           即devtools会监听classpath下的文件变动，并且会立即重启应用（发生在保存时机），注意：因为其采用的虚拟机机制，该项重启是很快的    
        -->
       <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        
        
        <!--spring boot 配置处理器 -->      
       <dependency>
           <groupId>org.springframework.boot</groupId>
           <artifactId>spring-boot-configuration-processor</artifactId>
           <optional>true</optional>
        </dependency>
        
        <!-- mongodb -->
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
			
		</dependency>
		<!-- 这里将mongo驱动的版本设置为3.2的版本，如果没有特殊需要，可以不加这个依赖 -->
		<dependency>
		  <groupId>org.mongodb</groupId>
		  <artifactId>mongo-java-driver</artifactId>
		  <version>3.2.0</version>
		</dependency>
    </dependencies>

    <!-- Package as an executable JAR -->
    <build>
        <plugins>
             <!--
             用于将应用打成可直接运行的jar（该jar就是用于生产环境中的jar） 值得注意的是，如果没有引用spring-boot-starter-parent做parent，
                       且采用了上述的第二种方式，这里也要做出相应的改动
             -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                   <!--fork :  如果没有该项配置，肯呢个devtools不会起作用，即应用不会restart -->
                    <fork>true</fork>
                </configuration>
            </plugin>
            <!--  plugin>
                     <groupId>org.springframework.boot</groupId>
                     <artifactId>spring-boot-maven-plugin </artifactId>
                     <dependencies--> 
                       <!--springloaded  hot deploy --> 
                       <!--  dependency> 
                           <groupId>org.springframework</groupId> 
                           <artifactId>springloaded</artifactId> 
                           <version>1.2.4.RELEASE</version>
                       </dependency> 
                    </dependencies> 
                    <executions> 
                       <execution> 
                           <goals> 
                               <goal>repackage</goal> 
                           </goals> 
                           <configuration> 
                               <classifier>exec</classifier> 
                           </configuration> 
                       </execution> 
                     </executions>
</plugin -->
<plugin>
   <artifactId>maven-compiler-plugin</artifactId>
   <configuration>
      <source>1.8</source>
      <target>1.8</target>
   </configuration>
</plugin>

            
        </plugins>
    </build>

       
   
  
</project>
